name: foodgram workflow

on:
  ['push']


jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2 
        with:
          python-version: 3.7

      - name: Install dependecies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r requirements.txt
      - name: Test with flake8 and pytest
        run: |
          python -m flake8
    
  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: shilsny/foodgram
          context: backend
          file: backend/Dockerfile
    
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: ${{ github.ref == 'refs/heads/master' }} or  %{{ github.ref == 'refs/heads/main' }}
    steps:
      - name: executing remote ssh command to deploy
        uses: appleboy/ssh-action@master 
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd infra
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            sudo docker pull shilsny/foodgram
            sudo docker-compose up -d --no-deps --build web
            sudo docker-compose exec web python manage.py makemigrations
            sudo docker-compose exec web python manage.py migrate
            sudo docker-compose exec web python manage.py collectstatic --no-input
